{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"3_Models","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"xJTpVbwuZAnf"},"outputs":[],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","source":["# Pandas is used to convert our csv to workable dataframe.\n","import pandas as pd\n","\n","# Seabord is an advanced visualising tool, used here , for Heat maps.\n","import seaborn as sns\n","\n","# Matplotlib is used to plot data into graphs.\n","import matplotlib.pyplot as plt\n","\n","# Using Sklearn to model and retrieve evaluation metrics. \n","from sklearn.model_selection import train_test_split\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.metrics import accuracy_score, confusion_matrix\n","from sklearn.metrics import precision_score, f1_score, roc_curve \n","from sklearn.metrics import auc, recall_score, roc_auc_score\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn import tree\n","from sklearn.ensemble import RandomForestClassifier"],"metadata":{"id":"KGYJDYRhZH31","executionInfo":{"status":"ok","timestamp":1639861429384,"user_tz":300,"elapsed":1073,"user":{"displayName":"Arif Waghbakriwala","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13401450137835164561"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["# Importing the cleaned Dataset into a pandas variable called df\n","df  = pd.read_csv(\"/content/drive/MyDrive/IDMP PROJECT/Final  Dataset/Final Dataset.csv\")"],"metadata":{"id":"x1DIoiP4ZL7t","executionInfo":{"status":"ok","timestamp":1639861434897,"user_tz":300,"elapsed":1005,"user":{"displayName":"Arif Waghbakriwala","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13401450137835164561"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["# Accessing only the genres related columns from the dataframe\n","genres = df[df.columns[126:146]]"],"metadata":{"id":"tVmuF1etZktS","executionInfo":{"status":"ok","timestamp":1639861453108,"user_tz":300,"elapsed":165,"user":{"displayName":"Arif Waghbakriwala","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13401450137835164561"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["# Using the matplotlib library to retireve a subplot of size 7x7\n","fig, ax = plt.subplots(figsize=(7,7))\n","# Using the Seaborn library to plot the heatmap on our subplot\n","sns.heatmap(genres.corr(), linewidths=.5, ax=ax)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":514},"id":"HYC0byaP_71Y","executionInfo":{"status":"ok","timestamp":1639861457494,"user_tz":300,"elapsed":750,"user":{"displayName":"Arif Waghbakriwala","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13401450137835164561"}},"outputId":"9699e9f7-1c2c-4e2f-cb66-876332e4d5e5"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f565498e750>"]},"metadata":{},"execution_count":6},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 504x504 with 2 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["# Converting the Bool column \"adult\" into 1s and 0s\n","df[\"adult\"].replace(True,'1', inplace=True)\n","df['adult'].replace(False,'0', inplace=True)"],"metadata":{"id":"mqFAkASM2anE","executionInfo":{"status":"ok","timestamp":1639861460824,"user_tz":300,"elapsed":219,"user":{"displayName":"Arif Waghbakriwala","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13401450137835164561"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["# Retriving the correlation values of only the target variable\n","# corr() gives the correlation values of all variables against each other.\n","# Since df is a pandas dataframe, we use column name(hit/not)\n","# to retrieve the correlation vlaues relative to that column\n","\n","cor = df.corr()\n","cor_tar = cor[\"hit/not\"]\n","\n","#Using a threshold value of 0.04 we choose the columns only that \n","# have correlation greater than threshold\n","\n","threshold = 0.04\n","rel_cor = cor_tar[abs(cor_tar) > threshold ]"],"metadata":{"id":"cZHlwZ2rbXVZ","executionInfo":{"status":"ok","timestamp":1639861483090,"user_tz":300,"elapsed":598,"user":{"displayName":"Arif Waghbakriwala","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13401450137835164561"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["df.info()"],"metadata":{"id":"9HhyroPe6aR2","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1639861486096,"user_tz":300,"elapsed":193,"user":{"displayName":"Arif Waghbakriwala","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13401450137835164561"}},"outputId":"90dfe98f-378c-4e6d-901c-95eb0ef44ac3"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 8992 entries, 0 to 8991\n","Columns: 147 entries, adult to hit/not\n","dtypes: float64(4), int64(135), object(8)\n","memory usage: 10.1+ MB\n"]}]},{"cell_type":"code","source":["# rel_cols only contain those columns that have greater correlation with our \n","# target variable.\n","\n","rel_cols = [\"popularity\",\"runtime\",\"vote_count\",\"budget\",\"worlwide_gross_income\",\n","            \"weighted_average_vote\",\"United States of America\",\"Germany\",\"France\",\n","            \"Italy\",\"Belgium\",\"Netherlands\",\"Luxembourg\",\"Finland\",\"Animation\",\n","            \"Adventure\",\"Comedy\",\"Action\",\"Drama\",\"Fantasy\",\"Family\",\"Foreign\",\n","            \"hit/not\"]\n","# Filtering out the columns that are irrelevant to our model\n","non_rel = []\n","for col in df.columns:\n","    if col not in rel_cols:\n","        non_rel.append(col)\n","        \n","# using drop() to drop those columns from our dataframe\n","df = df.drop(non_rel, axis=1)"],"metadata":{"id":"DGlGQPZBygmF","executionInfo":{"status":"ok","timestamp":1639861496091,"user_tz":300,"elapsed":225,"user":{"displayName":"Arif Waghbakriwala","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13401450137835164561"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["# creating a Heat map for relevant Columns\n","fig, ax = plt.subplots(figsize=(7,7))\n","sns.heatmap(df.corr(), linewidths=.5, ax=ax)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":564},"id":"rApDpPgxKN6R","executionInfo":{"status":"ok","timestamp":1639861501275,"user_tz":300,"elapsed":908,"user":{"displayName":"Arif Waghbakriwala","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13401450137835164561"}},"outputId":"4b2df550-1afa-44ba-e94d-f4daa4a0e2ec"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f565498e7d0>"]},"metadata":{},"execution_count":11},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 504x504 with 2 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["## Splitting data into Test and Training set\n","\n","X = df.iloc[:, :-1:]\n","y = df.iloc[:, -1]\n","\n","x_train, x_test, y_train, y_test = train_test_split(X, y, test_size=0.2,\n","                                                    random_state=0)"],"metadata":{"id":"f7qaWjKKKrrM","executionInfo":{"status":"ok","timestamp":1639861517321,"user_tz":300,"elapsed":146,"user":{"displayName":"Arif Waghbakriwala","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13401450137835164561"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["# Evaluation Metrics\n","# Using Sklearns to calculate metrics\n","# We are calculating accuracy, precision, F1-score, AUC and Specificity\n","def eval_metrics(y_test, y_pred):\n","  accuracy = accuracy_score(y_test, y_pred)\n","  cm = confusion_matrix(y_test, y_pred)\n","  precision = precision_score(y_test, y_pred)\n","  recall = recall_score(y_test, y_pred)\n","  f1 = f1_score(y_test, y_pred)\n","  fpr, tpr, thresholds = roc_curve(y_test, y_pred, pos_label=1)\n","  A = auc(fpr, tpr)\n","  roc = roc_auc_score(y_test, y_pred)\n","  tn, fp, fn, tp = cm.ravel()\n","  specificity = tn / (tn+fp)\n","  return accuracy*100, precision, recall, f1, A, specificity\n"],"metadata":{"id":"gXBcSaFF0Zg9","executionInfo":{"status":"ok","timestamp":1639861530845,"user_tz":300,"elapsed":199,"user":{"displayName":"Arif Waghbakriwala","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13401450137835164561"}}},"execution_count":13,"outputs":[]},{"cell_type":"markdown","source":["\n","Logistic Regression"],"metadata":{"id":"26BZqnbV0m3i"}},{"cell_type":"code","source":["# Using Logistic Regression model from Sklearn to model our data.\n","# Since it is a basic model, the we used mse to calculate error. \n","\n","# loading the LogisticRegression module in to lr\n","lr = LogisticRegression()\n","\n","# Fitting the model to our train set\n","lr.fit(x_train, y_train)\n","\n","# Using the trained model to predict out X_Test\n","pred = lr.predict(x_test)\n","\n","# Calculating our evaluation metrics using sklearn build-in package.\n","acc_lr,precision_lr, rec_lr, f1_lr, areaUnderCurve_lr, spec_lr= eval_metrics(y_test, pred)\n","\n","# Printing out the Evaluation Metrics \n","print(f\"The metrics for Logistic regression are: \\n Accuracy: {acc_lr}% \",\n","      f\"\\nPrecision: {precision_lr} \\nRecall: {rec_lr} \\nF1 score: {f1_lr} \",\n","      f\"\\nArea Under Curve: {areaUnderCurve_lr}  \\nSpecificity: {spec_lr}\")\n"],"metadata":{"id":"KWKxCkMZ0qKM","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1639861534124,"user_tz":300,"elapsed":320,"user":{"displayName":"Arif Waghbakriwala","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13401450137835164561"}},"outputId":"f8e8856c-d6f6-4243-85e1-4c1bf6470239"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["The metrics for Logistic regression are: \n"," Accuracy: 100.0%  \n","Precision: 1.0 \n","Recall: 1.0 \n","F1 score: 1.0  \n","Area Under Curve: 1.0  \n","Specificity: 1.0\n"]}]},{"cell_type":"markdown","source":["\n","KNN:\n"],"metadata":{"id":"5sjEtq3W02G_"}},{"cell_type":"code","source":["# Using KneighborsClassifier model from Sklearn to model our data.\n","# Since it is a basic model, the we used mse to calculate error. \n","\n","# loading the KNeighborsClassifier module in to knn\n","knn = KNeighborsClassifier()\n","\n","# Fitting the model to our train set\n","knn.fit(x_train, y_train)\n","\n","#  Using the trained model to predict out X_Test\n","y_pred_knn = knn.predict(x_test)\n","\n","# Calculating our evaluation metrics using sklearn build-in package.\n","acc_knn, precision_knn, rec_knn, f1_knn, areaUnderCurve_knn, spec_knn = eval_metrics(y_test, y_pred_knn)\n","\n","# Printing out the Evaluation Metrics \n","print(f\"The metrics for KNN are: \\n Accuracy: {acc_knn}%  \\nPrecision: {precision_knn}\"+\n","      f\" \\nRecall: {rec_knn} \\nF1 score: {f1_knn} \\nArea Under Curve: {areaUnderCurve_knn}\"+\n","      f\" \\nSpecificity: {spec_knn}\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UTNaQCuA0_K4","executionInfo":{"status":"ok","timestamp":1639441355484,"user_tz":300,"elapsed":508,"user":{"displayName":"Aanand .D","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhlQmprOqlioKnIbEaYZwcjhpaUyhglUYSn23m4=s64","userId":"05510627585753695883"}},"outputId":"7f58d95b-fff2-4fc6-af7b-93b793559e8e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The metrics for KNN are: \n"," Accuracy: 99.27737632017788%  \n","Precision: 0.9913606911447084 \n","Recall: 0.9945828819068255 \n","F1 score: 0.9929691725256895 \n","Area Under Curve: 0.9927252309077507 \n","Specificity: 0.9908675799086758\n"]}]},{"cell_type":"markdown","source":["\n","Decision Tree:"],"metadata":{"id":"0WIBvvoP1KdM"}},{"cell_type":"code","source":["# Using KneighborsClassifier model from Sklearn to model our data.\n","# For Decision Tree we take Cross-Entropy Loss as loss function.\n","# We set that minimum split samples to be 5\n","# minimum number of leaf nodes is 6\n","# and we set the max_features to auto to facilitate the model to random skip a few features.\n","# Random State is set as 50.\n","\n","# loading the KNeighborsClassifier module in to dt with hyperparameters\n","dt = tree.DecisionTreeClassifier(criterion='entropy', min_samples_split=5, \n","                                 min_samples_leaf=6, max_features='auto', \n","                                 random_state=50)\n","\n","# Fitting the model to our train set\n","dt.fit(x_train, y_train)\n","\n","#  Using the trained model to predict out X_Test\n","y_pred_dt = dt.predict(x_test)\n","\n","# Calculating our evaluation metrics using sklearn build-in package.\n","acc_dt, precision_dt, rec_dt, f1_dt, areaUnderCurve_dt, spec_dt = eval_metrics(y_test, y_pred_dt)\n","\n","# Printing out the Evaluation Metrics \n","print(f\"The metrics for Decision Tree are: \\n Accuracy: {acc_dt}%\",\n","      f\" \\nPrecision: {precision_dt} \\nRecall: {rec_dt} \\nF1 score:\",\n","      f\" {f1_dt} \\nArea Under Curve: {areaUnderCurve_dt}\",\n","      f\" \\nSpecificity: {spec_dt}\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ev3E1Fo71KIW","executionInfo":{"status":"ok","timestamp":1639441397688,"user_tz":300,"elapsed":150,"user":{"displayName":"Aanand .D","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhlQmprOqlioKnIbEaYZwcjhpaUyhglUYSn23m4=s64","userId":"05510627585753695883"}},"outputId":"f638ccd5-05bf-4995-8e74-c2cd399e6353"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The metrics for Decision Tree are: \n"," Accuracy: 85.38076709282934%  \n","Precision: 0.8395061728395061 \n","Recall: 0.8840736728060672 \n","F1 score:  0.8612137203166227 \n","Area Under Curve: 0.8529957405126226  \n","Specificity: 0.821917808219178\n"]}]},{"cell_type":"markdown","source":["Random  Forest\n"],"metadata":{"id":"BmXwBbj71RVr"}},{"cell_type":"code","source":["# Using RandomForestClassifier model from Sklearn to model our data.\n","# For Random Forest, we take Cross-Entropy Loss as loss function.\n","# We set that minimum split samples to be 5\n","# minimum number of leaf nodes is 6\n","# and we set the max_features to auto to facilitate the model to random skip a few features.\n","# Random State is set as 50.\n","\n","# loading the KNeighborsClassifier module in to rf with hyperparameters\n","rf = RandomForestClassifier(n_estimators=50, \n","                            criterion='entropy', min_samples_split=5, \n","                            min_samples_leaf=6, max_features='auto', \n","                            random_state=50)\n","\n","# Fitting the model to our train set\n","rf.fit(x_train, y_train)\n","\n","#  Using the trained model to predict out X_Test\n","y_pred_rf = rf.predict(x_test)\n","\n","# Calculating our evaluation metrics using sklearn build-in package.\n","acc_rf, precision_rf, rec_rf, f1_rf, areaUnderCurve_rf, spec_rf = eval_metrics(y_test, y_pred_rf)\n","\n","# Printing out the Evaluation Metrics \n","print(f\"The metrics for Random Forest are: \\n Accuracy: {acc_rf}%\"+\n","      f\" \\nPrecision: {precision_rf} \\nRecall: {rec_rf} \\nF1 score: {f1_rf} \"+\n","      f\"\\nArea Under Curve: {areaUnderCurve_rf} \\nSpecificity: {areaUnderCurve_rf}\")\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gQL-CwKf1SiX","executionInfo":{"status":"ok","timestamp":1639441433458,"user_tz":300,"elapsed":628,"user":{"displayName":"Aanand .D","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhlQmprOqlioKnIbEaYZwcjhpaUyhglUYSn23m4=s64","userId":"05510627585753695883"}},"outputId":"de893029-1163-4760-ceb0-6cbd494bba06"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The metrics for Random Forest are: \n"," Accuracy: 95.27515286270149% \n","Precision: 0.9554347826086956 \n","Recall: 0.952329360780065 \n","F1 score: 0.9538795442213781 \n","Area Under Curve: 0.9527628539060143 \n","Specificity: 0.9527628539060143\n"]}]}]}